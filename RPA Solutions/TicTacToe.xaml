<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="392,815.333333333333" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="21">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="18">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Tic Tac Toe" sap:VirtualizedContainerService.HintSize="352,695.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Default="0" Name="turn" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="win" />
      <Variable x:TypeArguments="s:String[]" Name="options" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="list" />
      <Variable x:TypeArguments="s:String[]" Name="board" />
      <Variable x:TypeArguments="s:String[]" Name="options1" />
      <Variable x:TypeArguments="ui:GenericValue" Name="outcome" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="314,62" sap2010:WorkflowViewState.IdRef="Assign_20">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[turn]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence sap2010:Annotation.AnnotationText="Initialise board with empty strings&#xA;Initialise list with numbers 1 to 9&#xA;Convert list to option array&#xA;Default draw outcome" DisplayName="Init" sap:VirtualizedContainerService.HintSize="314,181.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="314,58.6666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[&quot;This is a game of tic tae toe.&quot;+Environment.NewLine+&quot;The tiles are ordered 1 to 9 from the top left to bottom right by row&quot; + Environment.NewLine+ &quot;  1  |  2  |  3  &quot; + Environment.NewLine + &quot;  4  |  5  |  6  &quot; + Environment.NewLine + &quot;  7  |  8  |  9  &quot;]" TopMost="True" />
      <Assign sap:VirtualizedContainerService.HintSize="314,62" sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[options1]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[{"1","2","3","4","5","6","7","8","9"}]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="314,62" sap2010:WorkflowViewState.IdRef="Assign_3">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[board]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]" xml:space="preserve">[{"      ","      ","      ","      ","      ","      ","      ","      ","      "}]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="314,62" sap2010:WorkflowViewState.IdRef="Assign_13">
        <Assign.To>
          <OutArgument x:TypeArguments="ui:GenericValue">[outcome]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="ui:GenericValue">["undefined"]</InArgument>
        </Assign.Value>
      </Assign>
      <Sequence DisplayName="Create List 1 to 9" sap:VirtualizedContainerService.HintSize="314,52.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Assign List" sap:VirtualizedContainerService.HintSize="284.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_4">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:List(x:String)">[list]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:List(x:String)">[New System.Collections.Generic.List(Of String)]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each item Within options" sap:VirtualizedContainerService.HintSize="284.666666666667,198.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[options1]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:String">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:String" Name="item" />
              </ActivityAction.Argument>
              <AddToCollection x:TypeArguments="x:String" Collection="[list]" DisplayName="Add To Collection (List)" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[item]" />
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
      </Sequence>
    </Sequence>
    <While sap2010:Annotation.AnnotationText="Check win condition met -&gt; Check turn -&gt; Input in player, else let computer choose number -&gt; Update board -&gt; Update list (pop) -&gt; Update options -&gt; Check if game over and update win variable" DisplayName="While Game Not Ended" sap:VirtualizedContainerService.HintSize="314,181.333333333333" sap2010:WorkflowViewState.IdRef="While_1">
      <While.Variables>
        <Variable x:TypeArguments="x:Int32" Name="choice" />
      </While.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <While.Condition>[win &lt; 1]</While.Condition>
      <Sequence DisplayName="Play and check if end" sap:VirtualizedContainerService.HintSize="534,1810.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Convert list to options array" sap:VirtualizedContainerService.HintSize="512,62" sap2010:WorkflowViewState.IdRef="Assign_8">
          <Assign.To>
            <OutArgument x:TypeArguments="s:String[]">[options]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s:String[]">[list.ConvertAll(function(x) x.ToString).ToArray()]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Current Board" sap:VirtualizedContainerService.HintSize="512,58.6666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[board(0)+&quot;|&quot;+board(1)+&quot;|&quot;+board(2) + Environment.NewLine + board(3)+&quot;|&quot;+board(4)+&quot;|&quot;+board(5) + Environment.NewLine + board(6)+&quot;|&quot;+board(7)+&quot;|&quot;+board(8)]" TopMost="True" />
        <If Condition="[turn = 0]" sap:VirtualizedContainerService.HintSize="512,214" sap2010:WorkflowViewState.IdRef="If_1">
          <If.Then>
            <Sequence DisplayName="Player turn" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InputDialog DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="314,92" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Please pick an option" Options="[options]" Title="Your turn">
                <ui:InputDialog.Result>
                  <OutArgument x:TypeArguments="x:Int32">[choice]</OutArgument>
                </ui:InputDialog.Result>
              </ui:InputDialog>
              <Assign sap:VirtualizedContainerService.HintSize="314,62" sap2010:WorkflowViewState.IdRef="Assign_9">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[choice]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(choice)-1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="314,62" sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[board(choice)]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">  X  </InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="314,62" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[turn]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">1</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="Computer Turn" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Int32" Name="random" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="242,62" sap2010:WorkflowViewState.IdRef="Assign_10">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[random]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[new Random().Next(0,list.Count)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="242,62" sap2010:WorkflowViewState.IdRef="Assign_11">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[choice]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(list(random))-1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="242,62" sap2010:WorkflowViewState.IdRef="Assign_12">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[board(choice)]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">  0  </InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="242,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[turn]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Else>
        </If>
        <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="512,137.333333333333" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Remove">
          <InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="scg:List(x:String)">[list]</InArgument>
          </InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="x:String">[(choice+1).ToString]</InArgument>
        </InvokeMethod>
        <Sequence DisplayName="Check if game end" sap:VirtualizedContainerService.HintSize="512,1054.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[board(0) = &quot;  X  &quot; And board(1) = &quot;  X  &quot; And board(2) = &quot;  X  &quot; Or&#xA;board(3) = &quot;  X  &quot; And board(4) = &quot;  X  &quot; And board(5) = &quot;  X  &quot; Or&#xA;board(6) = &quot;  X  &quot; And board(7) = &quot;  X  &quot; And board(8) = &quot;  X  &quot; Or&#xA;board(0) = &quot;  X  &quot; And board(3) = &quot;  X  &quot; And board(6) = &quot;  X  &quot; Or&#xA;board(1) = &quot;  X  &quot; And board(4) = &quot;  X  &quot; And board(7) = &quot;  X  &quot; Or&#xA;board(2) = &quot;  X  &quot; And board(5) = &quot;  X  &quot; And board(8) = &quot;  X  &quot; Or&#xA;board(0) = &quot;  X  &quot; And board(4) = &quot;  X  &quot; And board(8) = &quot;  X  &quot; Or&#xA;board(2) = &quot;  X  &quot; And board(4) = &quot;  X  &quot; And board(6) = &quot;  X  &quot;]" DisplayName="Check if player wins" sap:VirtualizedContainerService.HintSize="490,445.333333333333" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="264,288" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="242,62" sap2010:WorkflowViewState.IdRef="Assign_14">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ui:GenericValue">[outcome]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ui:GenericValue">["Player wins!"]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="242,62" sap2010:WorkflowViewState.IdRef="Assign_15">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[win]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">1</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
          </If>
          <If Condition="[board(0) = &quot;  0  &quot; And board(1) = &quot;  0  &quot; And board(2) = &quot;  0  &quot; Or&#xA;board(3) = &quot;  0  &quot; And board(4) = &quot;  0  &quot; And board(5) = &quot;  0  &quot; Or&#xA;board(6) = &quot;  0  &quot; And board(7) = &quot;  0  &quot; And board(8) = &quot;  0  &quot; Or&#xA;board(0) = &quot;  0  &quot; And board(3) = &quot;  0  &quot; And board(6) = &quot;  0  &quot; Or&#xA;board(1) = &quot;  0  &quot; And board(4) = &quot;  0  &quot; And board(7) = &quot;  0  &quot; Or&#xA;board(2) = &quot;  0  &quot; And board(5) = &quot;  0  &quot; And board(8) = &quot;  0  &quot; Or&#xA;board(0) = &quot;  0  &quot; And board(4) = &quot;  0  &quot; And board(8) = &quot;  0  &quot; Or&#xA;board(2) = &quot;  0  &quot; And board(4) = &quot;  0  &quot; And board(6) = &quot;  0  &quot;]" DisplayName="Check if computer wins" sap:VirtualizedContainerService.HintSize="490,445.333333333333" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="264,288" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="242,62" sap2010:WorkflowViewState.IdRef="Assign_16">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ui:GenericValue">[outcome]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ui:GenericValue">["Computer wins!"]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="242,62" sap2010:WorkflowViewState.IdRef="Assign_17">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[win]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">1</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <If Condition="[list.Count &lt; 1]" DisplayName="Check if board full" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="264,288" sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="242,62" sap2010:WorkflowViewState.IdRef="Assign_18">
                      <Assign.To>
                        <OutArgument x:TypeArguments="ui:GenericValue">[outcome]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="ui:GenericValue">["Game is drawn"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="242,62" sap2010:WorkflowViewState.IdRef="Assign_19">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[win]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">1</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
              </If>
            </If.Else>
          </If>
        </Sequence>
      </Sequence>
    </While>
    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Game over" sap:VirtualizedContainerService.HintSize="314,58.6666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[board(0)+&quot;|&quot;+board(1)+&quot;|&quot;+board(2) + Environment.NewLine + board(3)+&quot;|&quot;+board(4)+&quot;|&quot;+board(5) + Environment.NewLine + board(6)+&quot;|&quot;+board(7)+&quot;|&quot;+board(8) + Environment.NewLine + Outcome + Environment.NewLine + &quot;Please start program for a new game&quot;]" TopMost="True" />
  </Sequence>
</Activity>